{
  "compilerOptions": {
    "target": "ESNext",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "NodeNext",                                /* Specify what module code is generated. */
    "moduleResolution": "NodeNext",                     /* Specify how TypeScript looks up a file from a given module specifier. */
    "outDir": "./dist",                                   /* Specify an output folder for all emitted files. */    // "removeComments": true,                           /* Disable emitting comments. */    // "noEmit": true,                                   /* Disable emitting files from a compilation. */    // "importHelpers": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */    // "importsNotUsedAsValues": "remove",               /* Specify emit/checking behavior for imports that are only used for types. */    // "downlevelIteration": true,                       /* Emit more compliant, but verbose and less performant JavaScript for iteration. */    // "sourceRoot": "",                                 /* Specify the root path for debuggers to find the reference source code. */    // "mapRoot": "",                                    /* Specify the location where debugger should locate map files instead of generated locations. */    // "inlineSources": true,                            /* Include source code in the sourcemaps inside the emitted JavaScript. */    // "emitBOM": true,                                  /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */    // "newLine": "crlf",                                /* Set the newline character for emitting files. */    // "stripInternal": true,                            /* Disable emitting declarations that have '@internal' in their JSDoc comments. */    // "noEmitHelpers": true,                            /* Disable generating custom helper functions like '__extends' in compiled output. */    // "noEmitOnError": true,                            /* Disable emitting files if any type checking errors are reported. */    // "preserveConstEnums": true,                       /* Disable erasing 'const enum' declarations in generated code. */    // "declarationDir": "./",                           /* Specify the output directory for generated declaration files. */    // "preserveValueImports": true,                     /* Preserve unused imported values in the JavaScript output that would otherwise be removed. */    /* Interop Constraints */    // "isolatedModules": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */    // "verbatimModuleSyntax": true,                     /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting. */    // "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  }
}